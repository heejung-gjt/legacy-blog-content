<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://heejung-gjt.github.io/author/jung/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://heejung-gjt.github.io/" rel="alternate" type="text/html" />
  <updated>2021-01-30T20:02:58+09:00</updated>
  <id>https://heejung-gjt.github.io/author/jung/feed.xml</id>

  
  
  

  
    <title type="html">Studying  Develope | </title>
  

  
    <subtitle>개발 공부하는 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">git flow 이용해서 merge하기</title>
      <link href="https://heejung-gjt.github.io/git-flow" rel="alternate" type="text/html" title="git flow 이용해서 merge하기" />
      <published>2021-01-30T13:47:00+09:00</published>
      <updated>2021-01-30T13:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/git-flow</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/git-flow">&lt;h3 id=&quot;git-flow-이용하기&quot;&gt;git flow 이용하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-installation&quot;&gt;✔ installation&lt;/h4&gt;

&lt;p&gt;ubuntu 설치방법 (사용자 환경마다 설치 방법 다름)
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install git-flow
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-git-flow-init-은-새로운-기능의-개발을-develop-브랜치에서-시작하기-위한-명령어이다-해당-명령어를-작성하면-develop라는-branch가-생성되며-해당-branch로-이동하게-된다&quot;&gt;✔ git flow init 은 새로운 기능의 개발을 develop 브랜치에서 시작하기 위한 명령어이다. 해당 명령어를 작성하면 develop라는 branch가 생성되며 해당 branch로 이동하게 된다.&lt;/h4&gt;
&lt;p&gt;(몇몇 질문은 기본값으로 설정하자. enter를 쳐서 넘어가면 된다)&lt;/p&gt;

&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git flow init

Which branch should be used &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;bringing forth production releases?
   - main
Branch name &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;production releases: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main] 
Branch name &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;next release&quot;&lt;/span&gt; development: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;develop] 

How to name your supporting branch prefixes?
Feature branches? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;feature/] 
Bugfix branches? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;bugfix/] 
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; develop
  main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-새-기능의-개발을-시작하기-위해서-develop에-기반한-새-기능-브랜치를-생성하고-해당-브랜치로-전환한다&quot;&gt;✔ 새 기능의 개발을 시작하기 위해서 develop에 기반한 새 기능 브랜치를 생성하고 해당 브랜치로 전환한다&lt;/h4&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git flow feature start &amp;lt;브랜치명&amp;gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch

develop
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; feature/add-hint &lt;span class=&quot;c&quot;&gt;# 브랜치 생성됨&lt;/span&gt;
main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-해당-브랜치에서-numguesspy의-기능등을-수정한-후-add-commit을-차례대로-해준다&quot;&gt;✔ 해당 브랜치에서 numguess.py의 기능등을 수정한 후 add, commit을 차례대로 해준다&lt;/h4&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-numguesspy의-기능-개발이-완료되었다면&quot;&gt;✔ numguess.py의 기능 개발이 완료되었다면&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;feature/add-hint 브랜치를  develop 브랜치에 병합한다&lt;/li&gt;
  &lt;li&gt;기능 브랜치를 feature/add-hint 브랜치를 삭제한다&lt;/li&gt;
  &lt;li&gt;develop 브랜치로 전환한다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;아래의 명령어가 1~3번의 모든것을 수행한다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git flow feature finish add-hint

Switched to branch &lt;span class=&quot;s1&quot;&gt;'develop'&lt;/span&gt;
Updating cb25953..9eede5f
Fast-forward
 numguess.py | 9 ++++++---
 1 file changed, 6 insertions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 3 deletions&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Deleted branch feature/add-hint &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;was 9eede5f&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

Summary of actions:
- The feature branch &lt;span class=&quot;s1&quot;&gt;'feature/add-hint'&lt;/span&gt; was merged into &lt;span class=&quot;s1&quot;&gt;'develop'&lt;/span&gt;
- Feature branch &lt;span class=&quot;s1&quot;&gt;'feature/add-hint'&lt;/span&gt; has been locally deleted
- You are now on branch &lt;span class=&quot;s1&quot;&gt;'develop'&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; develop
  main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-수정한-numguesspy-를-출시하기-위해-릴리스를-시작한다&quot;&gt;✔ 수정한 numguess.py 를 출시하기 위해 릴리스를 시작한다.&lt;/h4&gt;
&lt;p&gt;develop 브랜치로부터 release브랜치를 생성한다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git flow release start v.1.0.0.210130001

Switched to a new branch &lt;span class=&quot;s1&quot;&gt;'release/v.1.0.0.210130001'&lt;/span&gt;

Summary of actions:
- A new branch &lt;span class=&quot;s1&quot;&gt;'release/v.1.0.0.210130001'&lt;/span&gt; was created, based on &lt;span class=&quot;s1&quot;&gt;'develop'&lt;/span&gt;
- You are now on branch &lt;span class=&quot;s1&quot;&gt;'release/v.1.0.0.210130001'&lt;/span&gt;

Follow-up actions:
- Bump the version number now!
- Start committing last-minute fixes &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;preparing your release
- When &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;, run:
     git flow release finish &lt;span class=&quot;s1&quot;&gt;'v.1.0.0.210130001'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-릴리스를-완료해주면-된다-이때-vi창이-3번-뜨게-된다&quot;&gt;✔ 릴리스를 완료해주면 된다. 이때 vi창이 3번 뜨게 된다.&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;release브랜치를 main브랜치에 병합을 한다는 vi창  (저장)&lt;/li&gt;
  &lt;li&gt;릴리스를 릴리스 이름으로 태그 (작성 후 저장)&lt;/li&gt;
  &lt;li&gt;릴리스를 develop 브랜치로 재병합 (저장)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;release 브랜치는 자동으로 삭제된다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git flow release finish &lt;span class=&quot;s1&quot;&gt;'v.1.0.0.210130001'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 첫번째 vi창&lt;/span&gt;
Merge branch &lt;span class=&quot;s1&quot;&gt;'release/v.1.0.0.210130001'&lt;/span&gt; into main
&lt;span class=&quot;c&quot;&gt;# Please enter a commit message to explain why this merge is necessary,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# especially if it merges an updated upstream into a topic branch.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Lines starting with '#' will be ignored, and an empty message aborts&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# the commit.&lt;/span&gt;
~              

&lt;span class=&quot;c&quot;&gt;# 두번째 vi창&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Write a message for tag:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#   v.1.0.0.210130001&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Lines starting with '#' will be ignored.&lt;/span&gt;
~         

&lt;span class=&quot;c&quot;&gt;# 세번째 vi창&lt;/span&gt;
Merge tag &lt;span class=&quot;s1&quot;&gt;'v.1.0.0.210130001'&lt;/span&gt; into develop

feat: numguess v1.0.0
&lt;span class=&quot;c&quot;&gt;# Please enter a commit message to explain why this merge is necessary,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# especially if it merges an updated upstream into a topic branch.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Lines starting with '#' will be ignored, and an empty message aborts&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# the commit.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-develop-브랜치와-main을-각각-push를-해서-리모트에-업로드-해준다&quot;&gt;✔ develop 브랜치와 main을 각각 push를 해서 리모트에 업로드 해준다&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin develop
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout main
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;(파란선부터 시작) 아래의 이미지처럼 merge된 것을 볼 수 있다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/77425963/106345983-f792c500-62f6-11eb-82e4-42891484c344.png&quot; alt=&quot;merge&quot; /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-정리&quot;&gt;⭐ 정리&lt;/h3&gt;

&lt;h4 id=&quot;명령어&quot;&gt;명령어&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;feature : 특정 기능을 개발하거나 수정할때 사용하는 브랜치 (자동으로 생성, 삭제)&lt;/li&gt;
  &lt;li&gt;release : 수정한 기능을 배포할때 사용하는 브랜치 (버전네이밍 짓는 방법 알아보기)&lt;/li&gt;
  &lt;li&gt;git flow feature start &lt;branch-name&gt; : 기능 개발 시작&lt;/branch-name&gt;&lt;/li&gt;
  &lt;li&gt;git flow release start &lt;branch-name&gt; : 기능 배포 시작&lt;/branch-name&gt;&lt;/li&gt;
  &lt;li&gt;git flow feature finish &lt;branch-name&gt; : 기능 개발 완료 (develop 에 feature 브랜치 병합후 feature 브랜치 삭제)&lt;/branch-name&gt;&lt;/li&gt;
  &lt;li&gt;git flow release finish &lt;version-name&gt; : 기능 배포 완료 (main에 release 병합후 release 브랜치 삭제)&lt;/version-name&gt;&lt;/li&gt;
  &lt;li&gt;프로젝트에 적용 : develop 와 main에 push 해준다&lt;/li&gt;
&lt;/ul&gt;

&lt;hotfix는 나중에=&quot;&quot; 알아보자=&quot;&quot;&gt;  
&lt;/hotfix는&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">git init 사용하지 않고 clone 사용해 git 연결하기</title>
      <link href="https://heejung-gjt.github.io/git-create" rel="alternate" type="text/html" title="git init 사용하지 않고 clone 사용해 git 연결하기" />
      <published>2021-01-30T12:47:00+09:00</published>
      <updated>2021-01-30T12:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/git-create</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/git-create">&lt;h2 id=&quot;-git에-작성-내용-업로드하기&quot;&gt;👉 git에 작성 내용 업로드하기&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-1-github페이지에서-새로운-repository를-생성한다&quot;&gt;📌 1. github페이지에서 새로운 repository를 생성한다&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;여기서 만약 README.md를 생성했다면 4번-7번은 생략해준다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-2-로컬로-돌아와-저장할-폴더를-지정한-곳에-clone--해준다--클론-주소---github---생성한-repo---code-클릭---https-url을-복사-후-붙여넣기&quot;&gt;📌 2. 로컬로 돌아와 저장할 폴더를 지정한 곳에 clone  해준다.  (클론 주소 :  github -&amp;gt; 생성한 repo -&amp;gt; code 클릭 -&amp;gt; https url을 복사 후 붙여넣기)&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone &amp;lt;url주소&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-3-해당-폴더에-github의--repo이름으로-폴더가-생성된다-해당-로컬과-repo가-연결되었다&quot;&gt;📌 3. 해당 폴더에 github의  repo이름으로 폴더가 생성된다. (해당 로컬과 repo가 연결되었다)&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-4-readmemd파일이-없다면-touch-readmemd를-해준다&quot;&gt;📌 4. README.md파일이 없다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;touch README.md&lt;/code&gt;를 해준다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch README.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-5-git-add-후-git-commit을-해준다&quot;&gt;📌 5. git add 후 git commit을 해준다&lt;/h4&gt;
&lt;p&gt;(이때 git commit -m ““은 삼가해준다. 직접 편집기 들어가 변경후 저장 선호)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add README.md
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-6-main으로-branch를-연결해준다&quot;&gt;📌 6. main으로 branch를 연결해준다&lt;/h4&gt;
&lt;p&gt;(만약 바로 push를 해준다면 master로 연결됨)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-7-해당-내용을-main에-push해준다&quot;&gt;📌 7. 해당 내용을 main에 push해준다&lt;/h4&gt;
&lt;p&gt;(처음 push를 해줄땐 -u를 써준다)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin main 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-8-github에서-확인해-잘-올라갔으면-끝-&quot;&gt;📌 8. github에서 확인해 잘 올라갔으면 끝 !&lt;/h4&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Fork and Merge로 동료와 협업해보기 - 실습</title>
      <link href="https://heejung-gjt.github.io/git-collaborate" rel="alternate" type="text/html" title="Fork and Merge로 동료와 협업해보기 - 실습" />
      <published>2021-01-30T11:47:00+09:00</published>
      <updated>2021-01-30T11:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/git-collaborate</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/git-collaborate">&lt;h3 id=&quot;-fork-and-merge로-동료와-협업---실습으로-알아보기&quot;&gt;👉 Fork and Merge로 동료와 협업 - 실습으로 알아보기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;PM(팀장)&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;github에서 새로운 repo를 생성하고 내 컴에 clone 한다.&lt;/li&gt;
  &lt;li&gt;git flow init 후 develop에서 numguess.py를 만들고 add, commit, push&lt;/li&gt;
  &lt;li&gt;팀원에게 알린다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;DEV(팀원)&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;알림 받은 후, 방문하여 fork 한다. fork한 나의 repo를 내 컴에 clone한다.&lt;/li&gt;
  &lt;li&gt;팀장 repo에 방문하여 issue를 생성한다.&lt;/li&gt;
  &lt;li&gt;git flow init 후, dev -&amp;gt; feature/{MYFEATURE} 브랜칭 하여 작업한다. &lt;br /&gt;
(commit 시 발급한 issue 번호 매기기)&lt;/li&gt;
  &lt;li&gt;feature finish 후 나의 develop으로 push 한다.&lt;/li&gt;
  &lt;li&gt;create pull request 하고 팀장에게 알린다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;PM&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;pull request를 리뷰한다.&lt;/li&gt;
  &lt;li&gt;수정할 것을 지시한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;DEV&lt;/strong&gt; 6. 수정사항을 반영하여 다시 add,commit,push&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PM&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;merge한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;DEV&lt;/strong&gt; 7. PM repo 업데이트 발생시 PM의 develop을 pull한다.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;-pm&quot;&gt;👉 PM&lt;/h3&gt;

&lt;h4 id=&quot;1-pm-github에-fork-and-merge-repo를-생성한-후-clone해준다&quot;&gt;1. pm github에 &lt;code class=&quot;highlighter-rouge&quot;&gt;fork-and-merge&lt;/code&gt; repo를 생성한 후 clone해준다&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git clone &amp;lt;url명&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-git-flow-init으로--develop-브랜치를-생성한-후-해당-브랜치-내에서-numguesspy파일을-생성하여-add-commit을-해준다&quot;&gt;2. git flow init으로  develop 브랜치를 생성한 후 해당 브랜치 내에서 numguess.py파일을 생성하여 add, commit을 해준다&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git flow init

$ git branch #develop 생성되었는지 확인
* develop
  master

$ touch numguess.py
$ vi numguess.py # 팀원이 해야할 일 기록
$ git add numguess.py
$ git commit  
$ git push -u origin develop# master는 이미 remote와 로컬이 연결되어 있으므로 -u를 해주지 않아도 되지만 develop 브랜치는 생성된 후 처음 push를 하기 때문에    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-팀원에게-알린다&quot;&gt;3. 팀원에게 알린다&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;dev&quot;&gt;DEV&lt;/h4&gt;

&lt;h4 id=&quot;1-pm-의-git에-방문하여-해당-repo-fork한-후-clone-해준다&quot;&gt;1. PM 의 git에 방문하여 해당 repo fork한 후 clone 해준다.&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;해당 repo로 이동 -&amp;gt; 오른쪽 상단에 fork click&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git clone &amp;lt;fork한 dev의 url&amp;gt;
$ cd &amp;lt;clone명&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-dev가-pm-의-repo에서-issue를-만든다&quot;&gt;2. dev가 pm 의 repo에서 issue를 만든다&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-git-flow-init-후-dev---featuremyfeature-브랜칭-하여-작업한다&quot;&gt;3. git flow init 후, dev -&amp;gt; feature/{MYFEATURE} 브랜칭 하여 작업한다.&lt;/h4&gt;
&lt;h5 id=&quot;commit-시-발급한-issue-번호-매기기&quot;&gt;(commit 시 발급한 issue 번호 매기기)&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git flow init # develop 브랜치로 들어오면 pm이 작성한 numguess.py 가 있다
$ git flow feature start &amp;lt;feature/브랜치명&amp;gt;
$ vi numguess.py # 내용을 수정한다
$ git add numguess.py
$ git commit (commit 시 발급한 issue번호를 매겨준다) # solved: #n
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;4-feature-finish-후-dev의-develop으로-push-한다&quot;&gt;4. feature finish 후 dev의 develop으로 push 한다.&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git flow feature finish &amp;lt;feature/브랜치명&amp;gt;  # 기능 개발이 끝난 경우
$ git push origin develop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;5-create-pull-request-하고-팀장에게-알린다&quot;&gt;5. create pull request 하고 팀장에게 알린다.&lt;/h4&gt;
&lt;p&gt;pm의 repo로 돌아가 develop 브랜치에서 pull request를 눌러준다
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;6-이때-conflict이-발생-할-수-있다-이유는-이미-pm이-다른-내용을-merge했기-때문이다&quot;&gt;6. 이때 conflict이 발생 할 수 있다. 이유는 이미 pm이 다른 내용을 merge했기 때문이다.&lt;/h4&gt;
&lt;h5 id=&quot;다시-자신의-로컬로-돌아가-7번을-수행보자-conflict이-발생한다&quot;&gt;다시 자신의 로컬로 돌아가 7번을 수행보자 &lt;code class=&quot;highlighter-rouge&quot;&gt;CONFLICT이 발생한다&lt;/code&gt;&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;.
.
.
CONFLICT (content): Merge conflict in zero-to-number.py
Automatic merge failed; fix conflicts and then commit the result.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;이제 다시 vi로 conflct 나는 파일로 들어가 변경해준다  &lt;br /&gt;
그 후 add , commit 을 차례대로 해준뒤 &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin develop&lt;/code&gt;으로 다시 push해주고 pull request해주면  끝 ! 👍&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;pm&quot;&gt;PM&lt;/h3&gt;

&lt;h4 id=&quot;4-pull-request를-리뷰한다&quot;&gt;4. pull request를 리뷰한다.&lt;/h4&gt;
&lt;h4 id=&quot;5-수정할-것을-지시한다&quot;&gt;5. 수정할 것을 지시한다.&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dev-1&quot;&gt;DEV&lt;/h3&gt;

&lt;h4 id=&quot;6-수정사항을-반영하여-다시-addcommitpush&quot;&gt;6. 수정사항을 반영하여 다시 add,commit,push&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ vi numguess.py # 수정사항 변경
$ git add numguess.py
$ git commit
$ git push origin develop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;pm-1&quot;&gt;PM&lt;/h3&gt;
&lt;h4 id=&quot;6-merge-버튼을-눌러준다&quot;&gt;6. &lt;code class=&quot;highlighter-rouge&quot;&gt;merge 버튼을 눌러준다&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dev-2&quot;&gt;DEV&lt;/h3&gt;

&lt;h4 id=&quot;7-pm-repo-업데이트-발생시-pm의-develop을-pull한다&quot;&gt;7. PM repo 업데이트 발생시 PM의 develop을 pull한다.&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git remote -v # 자신의 remote인지 확인
$ git remote add pmorigin &amp;lt;pm의 url명&amp;gt;
$ git pull pmorigin develop # pm의 변경된 내용 pull
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;pm-2&quot;&gt;PM&lt;/h3&gt;

&lt;h4 id=&quot;6-자신의-로컬도-변경해준다&quot;&gt;6. 자신의 로컬도 변경해준다&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;language-git&quot;&gt;$ git pull origin develop
&lt;/code&gt;&lt;/pre&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">git branch로 checkout, merge 하기</title>
      <link href="https://heejung-gjt.github.io/git-branch" rel="alternate" type="text/html" title="git branch로 checkout, merge 하기" />
      <published>2021-01-30T11:00:00+09:00</published>
      <updated>2021-01-30T11:00:00+09:00</updated>
      <id>https://heejung-gjt.github.io/git-branch</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/git-branch">&lt;h2 id=&quot;-git-branch로-checkout-merge-하기------branch생성-후-main의-변화가-없을때&quot;&gt;📌 git branch로 checkout, merge 하기   -  branch생성 후 main의 변화가 없을때&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-git-branch-명령어로-현재-존재-하는-branch와-위치하고-있는-branch를-볼-수-있다&quot;&gt;✔ git branch 명령어로 현재 존재 하는 branch와 위치하고 있는 branch를 볼 수 있다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-main에-위치한-상황에서-python-파일을-하나-생성한-후-addcommit을-차례대로-해준다&quot;&gt;✔ main에 위치한 상황에서 python 파일을 하나 생성한 후 add,commit을 차례대로 해준다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;vi 편집기에서 작성&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;main에 numguess.py 파일이 commit된 상태로 존재하는 것을 볼 수 있다. 해당 파일을 새로운 branch를 생성해 편집해보자&lt;/p&gt;

&lt;h4 id=&quot;-새로운-branch를-생성-한-후-해당-branch로-전환&quot;&gt;✔ 새로운 branch를 생성 한 후 해당 branch로 전환&lt;/h4&gt;
&lt;p&gt;(git branch로 잘 전환되었는지 확인하자)&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;branch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iteration&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#브랜치 생성&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkout&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iteration&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 브랜치 전환&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-해당-브랜치에서-numguesspy의-내용을-편집한-후-add-commit을-차례대로-해준다&quot;&gt;✔ 해당 브랜치에서 numguess.py의 내용을 편집한 후 add, commit을 차례대로 해준다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;vi 편집기에서 작성&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-수정된-numguesspy파일을-main과-병합하기-위해-merge-옵션을-사용한다-merge가-끝난-후에는-생성했던-branch를-지워주자&quot;&gt;✔ 수정된 numguess.py파일을 main과 병합하기 위해 merge 옵션을 사용한다. merge가 끝난 후에는 생성했던 branch를 지워주자&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout main  &lt;span class=&quot;c&quot;&gt;# main으로 이동 후 병합&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git merge numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; iteration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-main에-있는-numguesspy를-확인해보면-iteration-브랜치에서-편집한-내용이-들어가-있는-것을-볼-수-있다&quot;&gt;✔ main에 있는 numguess.py를 확인해보면 iteration 브랜치에서 편집한 내용이 들어가 있는 것을 볼 수 있다&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위의 방법은 main에서 branch를 생성한 후 main의 내용에 변화가 없을때 merge할 수 있는 방법이다.  &lt;br /&gt;
branch를 만든 후에 main의 변화가 있을땐 merge하는 과정에서 conflict, 즉 충돌이 일어나게 된다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-branch생성-후-main의-변화가-있을때-conflict-해결하여-merge하기&quot;&gt;📌 branch생성 후 main의 변화가 있을때 Conflict 해결하여 merge하기&lt;/h2&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-새로운-branch를-생성한-후-해당-브랜치로-들어간다&quot;&gt;✔ 새로운 branch를 생성한 후 해당 브랜치로 들어간다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch discard
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout discard

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-discrad-브랜치에서-numguesspy-파일을-수정한-후-add-commit을-해준다&quot;&gt;✔ discrad 브랜치에서 numguess.py 파일을 수정한 후 add, commit을 해준다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-그-뒤-충돌을-일부러-내기-위해-main으로-돌아와-merge전-numguesspy의-내용을-수정-후-add-commit을-해준다&quot;&gt;✔ 그 뒤 충돌을 일부러 내기 위해 main으로 돌아와 merge전 numguess.py의 내용을 수정 후 add, commit을 해준다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout main
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add numguess.py
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-main에서-discard와-merge를-하면-충돌이-발생하게-된다&quot;&gt;✔ main에서 discard와 merge를 하면 충돌이 발생하게 된다&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git merge discard

Auto-merging numguess.py
CONFLICT &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;content&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Merge conflict &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;numguess.py
Automatic merge failed&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; fix conflicts and &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;commit the result.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-numguesspy를-편집기를-통해-들어오면-아래와-같이-내용이-추가되어-있는-것을-볼-수-있다&quot;&gt;✔ numguess.py를 편집기를 통해 들어오면 아래와 같이 내용이 추가되어 있는 것을 볼 수 있다&lt;/h4&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HEAD&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'OK BYEBYE SEE YOU LATER.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ANSWER : {num1}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'YOUR ANSWER : {guess}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;discard&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'NOPE !'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GAME OVER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/code&gt;     &lt;br /&gt;
&amp;lt; main에서 작성한 numgguess.py 내용 &amp;gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-=========```&quot;&gt;```&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; discard```   
&amp;lt;branch discard에서 작성한 numguess.py 내용&amp;gt;      

병합을 위해서 위의 두가지의 코드를 적절히 조합하여 수정, 삭제 등 변경해주면된다. (단 ! 위의 코드에 생성되있는 ===, &amp;lt;&amp;lt;&amp;lt; 기호들은 지워준다)    
#### ✔ 적절히 수정한 후 저장 후  실행이 잘 되는지 확인한 후 (```python3 numguess.py```) add,commit을 해준다    

#### ✔ 만들었던 branch는 깔끔하게 지워준다
```bash
git branch -D discard
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;github에  들어가  insights -&amp;gt; network를 확인해보면 아래의 이미지처럼 branch가 병합된 것을 볼 수 있다 🙌&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/77425963/106344584-f3ae7500-62ed-11eb-9304-265a1194c5f5.png&quot; alt=&quot;merge&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="git" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">TIL - git fork and merge로 동료와 협력하기</title>
      <link href="https://heejung-gjt.github.io/til04" rel="alternate" type="text/html" title="TIL - git fork and merge로 동료와 협력하기" />
      <published>2021-01-30T10:00:04+09:00</published>
      <updated>2021-01-30T10:00:04+09:00</updated>
      <id>https://heejung-gjt.github.io/til04</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/til04">&lt;h2 id=&quot;-0130-til&quot;&gt;👉 0130 TIL&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;오늘 배운  flow 로 merge하는 법을 이용하서 총 4명의 조원들과 실습을 해보았다&lt;/p&gt;

&lt;p&gt;PM이 repo를 파면 나머지 팀원들이 해당 repo를 fork해서 clone한 뒤 각자 flow init을 하여 feature branch에서 기능을 추가한 뒤 
pull request 하여 PM에게 피드백을 받았다. &lt;br /&gt;
만약 conflict가 나면 자신의 로컬에서 해당 내용을 수정한 뒤 다시 request 하는 방식으로 진행하였다 &lt;br /&gt;
굉장히 ,,, 굉장히 헷갈린다,,, 😂&lt;/p&gt;

&lt;h4 id=&quot;실습과정은-여기에-기록해-놓았다-click&quot;&gt;&lt;a href=&quot;http://127.0.0.1:4000/git-collaborate&quot;&gt;실습과정은 여기에 기록해 놓았다 click&lt;/a&gt;&lt;/h4&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="til" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">리눅스 기본 명령어</title>
      <link href="https://heejung-gjt.github.io/linux" rel="alternate" type="text/html" title="리눅스 기본 명령어" />
      <published>2021-01-27T14:47:00+09:00</published>
      <updated>2021-01-27T14:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/linux</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/linux">&lt;h3 id=&quot;-linux-명령어-정리&quot;&gt;👉 Linux 명령어 정리&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;디렉토리-목록-확인&quot;&gt;디렉토리 목록 확인&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;ls&lt;/li&gt;
  &lt;li&gt;ls -al : 숨겨진 파일까지 확인할 수 있다  &lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;디렉토리-생성&quot;&gt;디렉토리 생성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;mkdir &lt;디렉토리명&gt;&lt;/디렉토리명&gt;&lt;/li&gt;
  &lt;li&gt;mkdir -p &amp;lt;디렉토리명/…&amp;gt; : 여러 디렉토리를 생성할 수 있다 &lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;디렉토리-이동&quot;&gt;디렉토리 이동&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;cd &lt;디렉토리명&gt;&lt;/디렉토리명&gt;&lt;/li&gt;
  &lt;li&gt;cd .. : 부모 디렉토리로 이동한다 &lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;디렉토리-삭제&quot;&gt;디렉토리 삭제&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;rm -r &lt;디렉토리명&gt;&lt;/디렉토리명&gt;&lt;/li&gt;
  &lt;li&gt;rmdir &lt;디렉토리명&gt; : 비어있는 디렉토리를 삭제한다   
&lt;br /&gt;&lt;/디렉토리명&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;파일-생성&quot;&gt;파일 생성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;touch &lt;파일명&gt;   
&lt;br /&gt;&lt;/파일명&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;파일-이동&quot;&gt;파일 이동&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;mv &lt;파일이름&gt; &lt;이동할 폴더나=&quot;&quot; 파일이름=&quot;&quot;&gt;    
&lt;br /&gt;&lt;/이동할&gt;&lt;/파일이름&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;파일-이름변경&quot;&gt;파일 이름변경&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;mv &lt;파일이름&gt; &lt;바꿀 파일이름=&quot;&quot;&gt;   
&lt;br /&gt;&lt;/바꿀&gt;&lt;/파일이름&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;파일-삭제&quot;&gt;파일 삭제&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;rm &lt;파일이름&gt;   
&lt;br /&gt;&lt;/파일이름&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;파일-내용보기&quot;&gt;파일 내용보기&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;cat &lt;파일이름&gt;   
&lt;br /&gt;&lt;/파일이름&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;명령창-내용-삭제&quot;&gt;명령창 내용 삭제&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;clear &lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="linux" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">python CodeUp 100제</title>
      <link href="https://heejung-gjt.github.io/algorithm-codeup" rel="alternate" type="text/html" title="python CodeUp 100제" />
      <published>2021-01-27T14:47:00+09:00</published>
      <updated>2021-01-27T14:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/algorithm-codeup</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/algorithm-codeup">&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./python-algorithm-codeup&quot;&gt;CodeUp 기초100제&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-algorithm-hackerrank&quot;&gt;HackerRank&lt;/a&gt;&lt;/li&gt;
    &lt;!--    &lt;li&gt;&lt;a href=&quot;./python-algorithm&quot;&gt;class=&quot;content04 content&quot;&gt;Hacker Rank&lt;/a&gt;&lt;/li&gt;--&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;codeup-100제&quot;&gt;&lt;a href=&quot;https://codeup.kr/problemsetsol.php?psid=23&quot;&gt;CodeUp 100제&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&quot;-1001번--1025번-git-블로그-참고&quot;&gt;&lt;a href=&quot;&quot;&gt;👉 1001번 ~ 1025번 git 블로그 참고&lt;/a&gt;&lt;/h4&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="algorithm" />
      

      
        <summary type="html">CodeUp 기초100제 HackerRank</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">우분투에 pyenv 와 virtualenv 설치하기</title>
      <link href="https://heejung-gjt.github.io/linux-pyenv" rel="alternate" type="text/html" title="우분투에 pyenv 와 virtualenv 설치하기" />
      <published>2021-01-27T14:47:00+09:00</published>
      <updated>2021-01-27T14:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/linux-pyenv</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/linux-pyenv">&lt;h3 id=&quot;우분투에-가상환경-설치하기&quot;&gt;우분투에 가상환경 설치하기&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/heejung-gjt/TIL/blob/master/linux/%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BDerror.md&quot;&gt;👉 우분투 가상환경 설치시 발생했던 오류정리&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;-ubuntu-20041-lts에서-pyenv와-virtualenv설치&quot;&gt;✔ Ubuntu 20.04.1 LTS에서 pyenv와 virtualenv설치&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1pyenv설치&quot;&gt;1.pyenv설치&lt;/h3&gt;
&lt;p&gt;pyenv는 한 머신에 여러 버전의 파이썬을 설치할 수 있다. 필요에 따라 버전을 바꾸어가며 사용할 수 있게 해준다&lt;/p&gt;

&lt;p&gt;✔  pyenv를 설치하고 싶을 위치에 깃허브 저장소를 카피해준다.(보통 ~/.pyenv롤 설치를 해주는데 가장 최상단 root에 pyenv를 설치해준다)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/pyenv/pyenv.git ~/.pyenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  .bashrc에서 pyenv 환경설정을 해준다
(&lt;strong&gt;이때 우분투, zsh등 종류에 따라 다르니 찾아보자 !&lt;/strong&gt;)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ./bashrc

&lt;span class=&quot;nt&quot;&gt;---bashrc---&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PYENV_ROOT=&quot;$HOME/.pyenv&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PATH=&quot;$PYENV_ROOT/bin:$PATH&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;nt&quot;&gt;------------&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  그 뒤에 수정한 bashrc를 적용하기 위해서
&lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.bashrc&lt;/code&gt; 명령어로 적용해주자&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  그후 &lt;code class=&quot;highlighter-rouge&quot;&gt;pyenv&lt;/code&gt; 명령어를 쳐서 설치가 잘되었는지 확인하자 (&lt;strong&gt;잘 설치되지 않았다면 종료후 다시 켜서 해보자 !&lt;/strong&gt;)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv

&lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;아래처럼 나오면 성공 &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;
pyenv 1.2.22-26-g511756f0
Usage: pyenv &amp;lt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&amp;lt;args&amp;gt;]

Some useful pyenv commands are:
   activate    Activate virtual environment
   commands    List all available pyenv commands
   deactivate   Deactivate virtual environment
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  원하는 python 버전을 list로 찾아서 설치해준다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv install &lt;span class=&quot;nt&quot;&gt;--list&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 원하는 버전 찾기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv install 3.9.1  &lt;span class=&quot;c&quot;&gt;# python 설치&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pyenv versions &lt;span class=&quot;c&quot;&gt;#현재 설치된 버전 보기&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;2-virtualenv-설치&quot;&gt;2. Virtualenv 설치&lt;/h3&gt;
&lt;p&gt;✔  python 설치가 끝났으면 virtualenv를 설치하여 가상환경을 만들어준다   &lt;br /&gt;
 virtualenv는 파이썬 환경을 격리해주는 툴이다. 즉, 파이썬 구동환경을 관리해주는데 가상환경을 이용하면 파이썬 버전을 세분화해서 여러 개별 환경으로 구분해 관리해준다&lt;/p&gt;

&lt;p&gt;✔  pyenv 설치할때처럼 clone 해준다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  bashrc에서 환경설정을 추가해준다 &lt;br /&gt;
(잘 되지 않는다면 추가한 위치가 문제일 수도 있으니 이를 찾아보자 !)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ./bashrc

&lt;span class=&quot;nt&quot;&gt;---bashrc---&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'eval &quot;$(pyenv virtualenv-init -)&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bashrc
&lt;span class=&quot;nt&quot;&gt;------------&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  source ~/.bashrc로 변경내용을 적용해준다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  그 후 가상환경을 생성해준다  &lt;br /&gt;
(&lt;strong&gt;이때 오류가 발생한다면 종료했다가 다시 들어가보자!&lt;/strong&gt;)&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv virtualenv 3.9.1 &amp;lt;원하는 가상환경명&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  pyenv versions로 생성한 가상환경이 잘 생성되었는지 확인하자&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; system &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;by /home/heejung/.pyenv/version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  3.9.1
  3.9.1/envs/test
  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 생성한 가상환경&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;✔  접속이 잘 된다면 성공 !&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pyenv activate &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;✔  종료는 &lt;code class=&quot;highlighter-rouge&quot;&gt;pyenv deactivate&lt;/code&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="linux" />
      

      
        <summary type="html">우분투에 가상환경 설치하기</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">TIL - Parameter, Argument, *args, **kwargs</title>
      <link href="https://heejung-gjt.github.io/til03" rel="alternate" type="text/html" title="TIL - Parameter, Argument, *args, **kwargs" />
      <published>2021-01-27T10:00:04+09:00</published>
      <updated>2021-01-27T10:00:04+09:00</updated>
      <id>https://heejung-gjt.github.io/til03</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/til03">&lt;h2 id=&quot;-0127-til&quot;&gt;👉 0127 TIL&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;매개변수parameter&quot;&gt;매개변수(parameter)&lt;/h3&gt;
&lt;p&gt;매개변수는 변수, 정의라고 부른다. 함수의 정의 부분에 나열되어 있는 변수로 func 함수에 있는 a와b를 파라미터, 즉 매개변수라고 부른다  &lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;전달인자argument&quot;&gt;전달인자(argument)&lt;/h3&gt;
&lt;p&gt;전달인자는 함수가 호출될때 제공되는 값들을 말한다. 실행이라고도 말하며 호출 할 때마다 값이 바뀔수 있다&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# a 와 b == 파라미터 &lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 10,20 == 알규먼트&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;이니셜라이저&quot;&gt;이니셜라이저&lt;/h3&gt;
&lt;p&gt;이니셜라이저는 초기화를 뜻한다&lt;/p&gt;

&lt;p&gt;아래의 코드에서 만약 사용자가 값을 입력하지 않는다면 (알규먼트가 없다면) 지정해둔 값, 즉 이니셜라이즈한 값을 추가해준다(파라미터에 이니셜라이즈를 추가할 수 있다)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ask_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hee'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Fool'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# hee, Fool == 이니셜라이즈&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hi {user_name} {status}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ask_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'heejung'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 답 : hi heejung Fool &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# user_name은 사용자가 알규먼트를 입력하였기 때문에 파라미터로 전달 받았으며, status는 전달 받은것이 없기 때문에 이니셜라이즈 한 기본값  Fool이 출력된다 &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;args와-kwargs&quot;&gt;*args와 **kwargs&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;args는 정해지지 않은 수의 파라미터를 받는다&lt;/li&gt;
  &lt;li&gt;kwargs는 정해지지 않는 수의 키워드 파라미터를 받는다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;파라미터로 args 인자를 받는다. 사용자가 입력한 값의 수만큼 파라미터로 받는다. args는 튜플로 값이 출력된다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#실제로 args 사용을 위해서는 *를 빼주자&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#args 는 튜플로 받는다 . 리스트나 튜플은 비슷하므로 , 인덱스를 이용할 수 있다.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#답 : (1,2,3)&amp;lt;class 'tuple'&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;파라미터로 kwargs 인자를 받는다. 마찬가지로 사용자에게 여러개 값을 입력 받을 수 있다 . 이때 부가정보도 함께 보낼 수 있다. dic로 값을 출력할 수 있다&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_user_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#부가 정보 알규먼트 지정 : 딕셔너리로 받아준다&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#딕셔너리를 출력되므로 items()로 key와 value를 얻을 수 있다&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{}:{}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'phone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#phone 넘버만 받고 싶다면&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get_user_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'son'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;user_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'fdcmo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'0102808'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;locale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'seoul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
답 
{'name': 'son', 'user_name': 'fdcmo', 'phone': '0102808', 'locale': 'seoul'} &amp;lt;class 'dict'&amp;gt;
name:son
user_name:fdcmo
phone:0102808
locale:seoul
0102808
&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;파라미터-순서--디폴트알규먼트가-먼저-나오고-키워드-알규먼트가-나오기전에-이니셜라이즈-한-키워드-알규먼트가-나온다&quot;&gt;파라미터 순서 : 디폴트알규먼트가 먼저 나오고 키워드 알규먼트가 나오기전에 이니셜라이즈 한 키워드 알규먼트가 나온다&lt;/h4&gt;
&lt;h4 id=&quot;디폴트-알규먼트---이니셜라이저-한-키워드-알규먼트---키워드-알규먼트&quot;&gt;디폴트 알규먼트 -&amp;gt; 이니셜라이저 한 키워드 알규먼트 -&amp;gt; 키워드 알규먼트&lt;/h4&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="til" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">TIL - 몬티홀 구현, Ethiopian Multiplication</title>
      <link href="https://heejung-gjt.github.io/til02" rel="alternate" type="text/html" title="TIL - 몬티홀 구현, Ethiopian Multiplication" />
      <published>2021-01-26T10:00:04+09:00</published>
      <updated>2021-01-26T10:00:04+09:00</updated>
      <id>https://heejung-gjt.github.io/til02</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/til02">&lt;h2 id=&quot;-0126-til&quot;&gt;👉 0126 TIL&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ethiopian--multiplication&quot;&gt;Ethiopian  Multiplication&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;example input : 14 5&lt;/li&gt;
  &lt;li&gt;exmaple output : 70&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;풀어야-할-목표&quot;&gt;풀어야 할 목표&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;14 5 -&amp;gt; 70&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;7 10 keep&lt;/strong&gt;  &lt;br /&gt;
&lt;strong&gt;3 20 keep&lt;/strong&gt;  &lt;br /&gt;
&lt;strong&gt;1 40 keep&lt;/strong&gt;  &lt;br /&gt;
&lt;strong&gt;(10 + 20 +50) -&amp;gt; 70&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;코드구현&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#num1의 짝수를 찾는다&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pass {num1} {num2}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 짝수일 경우 result에 누적으로 더해준다 &lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'keep {num1} {num2}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#홀수일때 곱해졌던 num2 합계&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;monty-hall-simulation&quot;&gt;Monty Hall Simulation&lt;/h3&gt;

&lt;h3 id=&quot;몬티홀-정리&quot;&gt;몬티홀 정리&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. 문3개를 설정한다  doors = [0,0,1]. 이때 1을 차라고 설정을 하겠다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 3개의 문에 1의 위치(차 위치)를 랜덤으로 배치하기 위해서 shuffle 함수를 이용해준다. random.shuffle(doors)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 사용자가 3개의 문 중 한개를 랜덤으로 뽑는다. 이때 랜덤으로 뽑는 2가지 방법이 존재한다.&lt;/strong&gt;  &lt;br /&gt;
   &lt;strong&gt;(1) 이미 문을 랜덤하게 섞기 때문에   (2번에서) pop을 이용하여 맨 마지막 인덱스를 뽑아준다&lt;/strong&gt;  &lt;br /&gt;
   &lt;strong&gt;(2) 문을 랜덤하게 뽑을 수 있는 random.choice(doors) 를 이용하여 뽑아준다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 사회자가 문안에 있는 0을 하나 뽑아준다.이때 remove는 지정한 숫자가 리스트에 여러개 있는 경우에 가장 앞에 있는 중복되는 숫자 하나만 삭제한다. 즉, 0이 여러개여도 한개만 삭제된다는 것을 알 수 있다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. 이후 사용자가 문을 바꾸었을때 바꾸지 않았을때를 조건문으로 처리해준다&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;if문을 사용하여 사용자가 처음 선택했던 숫자가 1일 경우에는(차) 바꾸지 않는 것이 이득이므로 바꾸지 않았을때의 변수 stay에 +1를 누적해준다&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;만약 처음 선택했던 숫자가 1이 아닌 경우(염소)에는 바꾸는 경우가 더 이득이기 때문에 바꿨을때의변수 switch에 +1를 누적해준다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. 그후 %를 구해준다. 만약 10000번 반복하였다면  바꾸지 않았을때의 확률 (stay/trial)이며 바꾸었을때의 확률 (switch/trial)이다&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;코드 구현&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trial&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;users_choice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;doors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users_choice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;stay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'stay : {stay/trial}, switch{switch/trial}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="til" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
