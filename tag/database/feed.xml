<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://heejung-gjt.github.io/tag/database/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://heejung-gjt.github.io/" rel="alternate" type="text/html" />
  <updated>2021-12-03T21:08:48+09:00</updated>
  <id>https://heejung-gjt.github.io/tag/database/feed.xml</id>

  
  
  

  
    <title type="html">studying developer | </title>
  

  
    <subtitle>개발 공부하는 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">(MYSQL) Foreign Key 외래키(작성중..)</title>
      <link href="https://heejung-gjt.github.io/db7" rel="alternate" type="text/html" title="(MYSQL) Foreign Key 외래키(작성중..)" />
      <published>2021-09-28T20:59:00+09:00</published>
      <updated>2021-09-28T20:59:00+09:00</updated>
      <id>https://heejung-gjt.github.io/db7</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/db7">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;외래키란&quot;&gt;외래키란&lt;/h2&gt;
&lt;p&gt;외래키는 두 테이블을 서로 연결할때 사용하는 키로 두 테이블 사이의 관계를 선언하여 데이터의 무결성을 보장해준다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;외래키-예제&quot;&gt;외래키 예제&lt;/h2&gt;
&lt;p&gt;먼저 예제를 보면서 이해를 해보자. blog라는 데이터베이스가 존재한다. 이 안에는 user와 article이라는 테이블이 존재하고
article 과 user가 n:1의 관계를 갖는다고 해보자. 즉 여러개의 article이 하나의 user를 참조하는 것이다&lt;/p&gt;

&lt;p&gt;쉽게 말해서 한명의 유저는 여러개의 글들을 작성할 수 있다&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;use_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreign&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;references&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- user의 user_id가 외래키가 된다&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(MYSQL) .sql파일로 SQL 실행시키기</title>
      <link href="https://heejung-gjt.github.io/db6" rel="alternate" type="text/html" title="(MYSQL) .sql파일로 SQL 실행시키기" />
      <published>2021-09-28T20:57:00+09:00</published>
      <updated>2021-09-28T20:57:00+09:00</updated>
      <id>https://heejung-gjt.github.io/db6</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/db6">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;mysql을 ec2 서버에서 사용한다는 가정하에 작성하였습니다. 😀&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;DB를 사용할때 sql파일을 따로 불러와 SQL을 실행시켜야 할 때가 있다. workbench를 이용해서 
sql파일을 불러올 수도 있고 ec2서버로 sql파일을 불러올 경우엔 scp 명령어를 사용하여 보다 빠르게 sql 파일을 가져올 수 있다&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;1-workbench-이용하기&quot;&gt;1. workbench 이용하기&lt;/h2&gt;

&lt;p&gt;workbench를 사용하는 건 굉장히 간단하다. 하지만 .sql파일의 용량이 크면 클수록 업로드 되는 시간이 오래걸리는 단점이 있다 &lt;br /&gt;
&lt;strong&gt;File -&amp;gt; Open SQL Script -&amp;gt; .sql파일&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-scp명령어를-통해-서버에-sql파일-업로드-하기&quot;&gt;2. scp명령어를 통해 서버에 .sql파일 업로드 하기&lt;/h2&gt;

&lt;p&gt;localhost에서 MySQL 서버가 있는 ec2로 sql 파일을 전송하는 방법으로 서버에서 서버로 데이터를 보내기 때문에 속도가 1번의
방법보다 훨씬 빠르다&lt;/p&gt;

&lt;p&gt;명령어가 살짝 복잡하다..^^  &lt;br /&gt;
명령어를 살펴보면 &lt;strong&gt;scp를 이용해서 ~/Downloads/SQL/안에 있는 모든 sql파일을 ubuntu@퍼블릭주소의 서버의 ~/로 전송하겠다는 의미&lt;/strong&gt; 이다.  &lt;br /&gt;
~/가 아닌 보내고 싶은 서버의 디렉토리를 작성하면 된다.&lt;/p&gt;

&lt;p&gt;이후에 서버에서 ls로 sql파일을 확인 한 뒤 서버에서 mysql에 접속하여 데이터를 넣어주면 된다.  (sql파일이 어떤거냐에 따라 명령어가 추가 될 수 있다) &lt;br /&gt;
만약 데이터를 넣기 위한 데이터베이스가 따로 필요한 sql파일인 경우 데이터베이스를 먼저 create해준 뒤 파일을 넣어주면 된다&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql -u root -p{password명} {생성한 db명} &amp;lt; ~/sql명.sql -- 생성한 데이터베이스에 데이터 넣어준다
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http request
scp - i ~/.ssh/pem명.pem ~/Downloads/SQL/*.sql ubuntu@퍼블릭주소:~/
&lt;/code&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(MYSQL) pymysql라이브러리 설치 후 DB 연동하기</title>
      <link href="https://heejung-gjt.github.io/db5" rel="alternate" type="text/html" title="(MYSQL) pymysql라이브러리 설치 후 DB 연동하기" />
      <published>2021-09-28T10:00:00+09:00</published>
      <updated>2021-09-28T10:00:00+09:00</updated>
      <id>https://heejung-gjt.github.io/db5</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/db5">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pymysql이란&quot;&gt;pymysql이란&lt;/h2&gt;
&lt;p&gt;mysql을 python에서 사용할 수 있게 도와주는 라이브러리 중 하나이다. 파이썬에서 pymysql을 import하여 사용 할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-pymysql-import&quot;&gt;1. pymysql import&lt;/h2&gt;
&lt;p&gt;pymysql.connect()를 사용하여 mysql에 연결 할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymysql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-pymysqlconnect&quot;&gt;2. pymysql.connect()&lt;/h2&gt;

&lt;p&gt;host에는 workbench를 사용하고 있다면 workbench에 연결한 주소를 써주면 된다. &lt;strong&gt;나는 ec2로 연결해서 사용했기 때문에 ec2의 퍼블릭 주소를 작성해주었다&lt;/strong&gt;    &lt;br /&gt;
ec2로 연결해 사용 할 경우 port 3306을 열어주었는지 확인하자 !&lt;/p&gt;

&lt;p&gt;charset를 넣어주는 이유는 데이터를 가져올때 한글이 깨지는 것을 방지하기 위해 넣어주었다&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pymysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{mysql 서버 주소}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# localhost라면 localhost/127.0.0.1을 입력하면 된다. &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3306&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'root'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{password입력}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{db명}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf8'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# &amp;lt;pymysql.connections.Connection at 0x103c34d54&amp;gt; 이런식으로 나오면 연결 성공 한 것 !&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-cursor-메서드-호출해-cursor객체의-execute메서드-사용&quot;&gt;3. cursor() 메서드 호출해 Cursor객체의 execute()메서드 사용&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cursor Object를 가져온다 -&amp;gt; cursor = db.cursor()&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;SQL을 실행시킨다 -&amp;gt; cursor.execute(sql)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mysql서버에 결과를 반영시킨다 -&amp;gt; db.commit()&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;          - 2
    CREATE TABLE article(
        ID INT ...
        ...
    )
    &quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;cursor()메서드를 호출한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;sql 쿼리문을 작성한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;execute() 메서드를 이용해 작성한 쿼리문을 db 서버에 보낸다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;삽입/갱신/삭제 등이 끝나면 Connection 객체의 commit() 메서드를 이용해 데이터를 commit한다&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connection 객체의 close() 메서드를 이용해 db연결을 close한다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(MYSQL) DCL(Data Control Language) 실습 - 유저 생성, 변경, 권한</title>
      <link href="https://heejung-gjt.github.io/db4" rel="alternate" type="text/html" title="(MYSQL) DCL(Data Control Language) 실습 -  유저 생성, 변경, 권한" />
      <published>2021-09-26T20:57:00+09:00</published>
      <updated>2021-09-26T20:57:00+09:00</updated>
      <id>https://heejung-gjt.github.io/db4</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/db4">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-cli를-이용하여-db에-접속하기&quot;&gt;1. CLI를 이용하여 DB에 접속하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 비밀번호 입력후 접속&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 비밀번호 함께 입력후 접속&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;password&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-mysql-사용자-확인-추가&quot;&gt;2. mysql 사용자 확인, 추가&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
password: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;등록한 &lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-mysql에-접속후-바로-db까지-생성하기&quot;&gt;3. mysql에 접속후 바로 db까지 생성하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;password&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &amp;lt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;db이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;4-root-사용자-pwd-지정&quot;&gt;4. root 사용자 pwd 지정&lt;/h2&gt;

&lt;p&gt;맨 처음 mysql을 설치했을 경우에는 먼저 사용자와 pwd를 등록해야 한다. root를 사용하고 싶을땐 ALTER로 PWD를 지정해주면 된다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysql
mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER user &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost IDENTIFIED WITH mysql_native_password BY &lt;span class=&quot;s1&quot;&gt;'비밀번호 입력'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;5-로컬에서만-접속-가능한-user-생성&quot;&gt;5. 로컬에서만 접속 가능한 user 생성&lt;/h2&gt;

&lt;p&gt;다른 외부 컴퓨터에서는 mysql에 접속하지 못하고 자신의 컴퓨터에서만 접속할 수 있게 user를 생성하고 싶다면 localhost를 입력하면 된다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CREATE user &lt;span class=&quot;s1&quot;&gt;'userid'&lt;/span&gt;@localhost IDENTIFIED BY &lt;span class=&quot;s1&quot;&gt;'비밀번호'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;6-모든-호스트에서-접속-가능한-user-생성&quot;&gt;6. 모든 호스트에서 접속 가능한 user 생성&lt;/h2&gt;

&lt;p&gt;외부 컴퓨터에서도 mysql에 접속할 수 있게 user를 생성하고 싶다면 %를 입력하면 된다&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CREATE user &lt;span class=&quot;s1&quot;&gt;'userid'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt; IDENTIFIED BY &lt;span class=&quot;s1&quot;&gt;'비밀번호'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;7-사용자-패스워드-변경&quot;&gt;7. 사용자 패스워드 변경&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;root’@’%’와 ‘root’@localhost 중 처음에 user를 생성했을때 입력했던 값을 써야한다. root’@’%’ 까지가 하나의 아이디라고 생각하면 편하다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SET PASSWORD FOR &lt;span class=&quot;s1&quot;&gt;'userid'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'새 패스워드'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;8-사용자-삭제&quot;&gt;8. 사용자 삭제&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; use mysql&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; drop user &lt;span class=&quot;s1&quot;&gt;'userid'&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;'%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;9-mysql-현재-부여된-권한-확인&quot;&gt;9. mysql 현재 부여된 권한 확인&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SHOW GRANTS &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;id&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SHOW GRANTS &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhostlocalhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;10-로컬에서만-접속-허용&quot;&gt;10. 로컬에서만 접속 허용&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; GRANT ALL ON DATABASE.TABLE to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
GRANT ALL ON DATABASE.product to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@loaclhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 사용자 root에게 product table의 모든 변경 권한을 주었다. 즉 외부에서도 product crud 가능&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;11-특정-권한만-사용&quot;&gt;11. 특정 권한만 사용&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; GRANT SELECT, UPDATE ON DATABASE.TABLE to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
GRANT SELECT, UPDATE ON Market.product to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 사용자 root에게 product table의 읽기,수정의 권한만을 주었다. 즉 삭제와 같은 처리는 할 수 없다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;12-모든-데이터베이스-권한-설정&quot;&gt;12. 모든 데이터베이스 권한 설정&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GRANT ALL ON &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 사용자 root는 모든 데이터베이스의 crud가 가능하다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;13-특정-데이터베이스-내에-있는-모든-테이블에-권한-설정&quot;&gt;13. 특정 데이터베이스 내에 있는 모든 테이블에 권한 설정&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GRANT ALL ON DATABASE.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
ex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
GRANT ALL ON Market.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;'root'&lt;/span&gt;@localhost&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 사용자 root는 데이터베이스 Market내에 있는 모든 테이블의 crud가 가능하다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(MYSQL) DML CRUD - 데이터 생성, 읽기, 갱신, 삭제하기</title>
      <link href="https://heejung-gjt.github.io/db3" rel="alternate" type="text/html" title="(MYSQL) DML CRUD - 데이터 생성, 읽기, 갱신, 삭제하기" />
      <published>2021-09-22T20:52:00+09:00</published>
      <updated>2021-09-22T20:52:00+09:00</updated>
      <id>https://heejung-gjt.github.io/db3</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/db3">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-데이터-생성&quot;&gt;1. 데이터 생성&lt;/h2&gt;

&lt;p&gt;넣을 데이터는 테이블 필드의 순서에 맞게 넣어주면 된다. 이때 id같이 auto_increment로 지정되어 있는 필드는
자동으로 값이 카운트 되기 때문에 &lt;strong&gt;직접 넣을 데이터를 정할 수 있다&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;테이블명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; VALUES&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;넣을 데이터1, 넣을 데이터2,..&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

EX&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
INSERT INTO product VALUES&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1, &lt;span class=&quot;s1&quot;&gt;'여자바지'&lt;/span&gt;, 10000, 8000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;넣을 데이터 직접 지정해서 넣기&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INSERT INTO &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;테이블명&lt;span class=&quot;o&quot;&gt;}(&lt;/span&gt;지정한 데이터 필드1, 필드2...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; VALUES&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'넣을 데이터1'&lt;/span&gt;, 2,,,,&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

EX&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
INSERT INTO product&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;product_name, ori_price, sale_price&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; VALUES&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'어린이 바지'&lt;/span&gt;, 20000, 7000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-데이터-전체-읽기&quot;&gt;2. 데이터 전체 읽기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; FROM &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;테이블명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

SELECT &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; FROM product&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-정한-필드로-데이터-읽기&quot;&gt;3. 정한 필드로 데이터 읽기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;필드명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; FROM &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;테이블명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

SELECT name FROM computer_core&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;4-where절로-조건에-맞는-데이터-읽기&quot;&gt;4. WHERE절로 조건에 맞는 데이터 읽기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT name FROM computer_core WHERE id  &amp;lt; 2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# computer_core에서 id가 2보다 작은 name 출력&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;5-order-by절로-데이터-정렬하기&quot;&gt;5. ORDER BY절로 데이터 정렬하기&lt;/h2&gt;

&lt;p&gt;DESC가 내림차순이고 ASC가 오름차순으로 정렬이다. 이때 뒤에 아무것도 쓰지 않으면 디폴트값인 ASC, 즉 오름차순 정렬이 된다&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xhtml&quot;&gt;SELECT name FROM cumputer_core ORDER BY id DESC; # id역순으로 정렬
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;6-like절로-데이터-필터하기&quot;&gt;6. LIKE절로 데이터 필터하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# comupter_core테이블에 model_type에 Lake가 들어가 있는 데이터의  model_type과 name 출력  &lt;/span&gt;

SELECT model_type, name FROM cumputer_core WHERE model_type LIKE &lt;span class=&quot;s1&quot;&gt;'%Lake%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;7-limit으로-데이터-개수-제한하기&quot;&gt;7. LIMIT으로 데이터 개수 제한하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# computer_core테이블에 id와 name을 출력하는데 첫번째 이후 데이터부터 2번째까지의 데이터를 출력 &lt;/span&gt;
즉 id를 기준으로 id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, 3번이 출력된다    

SELECT id, name FROM computer_core LIMIT 1, 2&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;8-update로-데이터-수정하기&quot;&gt;8. UPDATE로 데이터 수정하기&lt;/h2&gt;

&lt;p&gt;첫번째 예시를 보면 모든 name이 변경되는 로직이다. 이는 db내에서 잘못 입력한 것으로 간주하여 에러를 발생시킨다. 
변경할때는 WHERE절을 함께 써서 조건을 정해준다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UPDATE computer_core SET name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'i5'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# computer_core 안에 name을 모두 i5로 변경 (에러발생)  &lt;/span&gt;

UPDATE computer_core SET name &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'i100'&lt;/span&gt; WHERE id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# compuer_core안에 id가 3인 데이터의 name을 i100으로 변경   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;9-delete로-데이터-삭제하기&quot;&gt;9. DELETE로 데이터 삭제하기&lt;/h2&gt;

&lt;p&gt;보통 WHERE절과 함께 써서 특정한 조건에 맞는 데이터만 삭제하는 경우가 많다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DELETE FROM &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;테이블명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; WHERE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;특정 컬럼&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'값'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

ex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
DELETE FROM product WHERE id &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# product 테이블의 id가 1인 데이터가 삭제된다&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">(MYSQL) 데이터베이스 기본 명령어</title>
      <link href="https://heejung-gjt.github.io/db2" rel="alternate" type="text/html" title="(MYSQL) 데이터베이스 기본 명령어" />
      <published>2021-07-13T20:47:00+09:00</published>
      <updated>2021-07-13T20:47:00+09:00</updated>
      <id>https://heejung-gjt.github.io/db2</id>
      <content type="html" xml:base="https://heejung-gjt.github.io/db2">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;장고와 mysql을 연동해서 사용할때 나는 ORM을 사용해 DB에 접근하였기 때문에 쿼리문을 알고있지 않아도 큰 문제가 되지 않았지만 최소한의 쿼리문과 명령문을 쓸 줄 알아야  편하게 DB를 조작할 수 있었다. 정말 최소한 알아야 하는 명령문을 정리하였다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;database의 명령문은 대문자와 소문자를 구별하지 않지만 대문자를 쓰는 것이 컨벤션이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;1-database-생성하기&quot;&gt;1. database 생성하기&lt;/h2&gt;

&lt;p&gt;이곳에 쓰이는 DB이름이 장고 settings  NAME에 작성되는 이름이다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql&amp;gt; CREATE DATABASE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;db이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-생성한-db-확인하기--현재-계정이-접근할-수-있는-데이터베이스&quot;&gt;2. 생성한 db 확인하기 ( 현재 계정이 접근할 수 있는 데이터베이스)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SHOW DATABASES&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-사용할-db에-접속하기&quot;&gt;3. 사용할 db에 접속하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; USE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;db이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;4-접속한-db의-테이블-확인하기&quot;&gt;4. 접속한 db의 테이블 확인하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SHOW TABLES&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;5-접속한-테이블-내부에-있는-필드-확인하기&quot;&gt;5. 접속한 테이블 내부에 있는 필드 확인하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; DESC &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;테이블명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;6-테이블-필드-추가하기&quot;&gt;6. 테이블 필드 추가하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER TABLE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;table명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; ADD &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;추가할 필드 이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;추가할 필드 타입&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER TABLE student_tb ADD age int&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# EX) student_tb 테이블에 int 타입의 age 필드를 추가한다&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;7-테이블-필드-변경하기&quot;&gt;7. 테이블 필드 변경하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;change, modify 2가지로 변경 가능하다&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER TABLE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;table명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; CHANGE COLUMN &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;수정할 필드 이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;새로운 필드 이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;타입&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ALTER TABLE customer CHANGE COLUMN name modelname varchar(10)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER TABLE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;table명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; MODIFY COLUMN &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;수정할 필드 이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;변경할 타입/유형&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# ALTER TABLE customer MODIFY COLUMN name varchar(20) NOT NULL;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;8-테이블-필드-삭제하기row삭제&quot;&gt;8. 테이블 필드 삭제하기(ROW삭제)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER TABLE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;table명&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; DROP COLUMN &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;삭제할 필드 이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;9-테이블-생성하기-workbench-사용추천&quot;&gt;9. 테이블 생성하기 (workbench 사용추천)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; CREATE TABLE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;table명&lt;span class=&quot;o&quot;&gt;}(&lt;/span&gt;
			필드명 타입,
			필드명 타입
			PRIMARY KEY&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;필드명&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 예&lt;/span&gt;
sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; CREATE TABLE student&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
			id int,
			name char&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;20&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,
            age int,
			PRIMARY KEY&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;id&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;10-테이블의-이름-변경하기&quot;&gt;10. 테이블의 이름 변경하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER TABLE student_tb RENAME teacher_tb&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;11--테이블-삭제하기&quot;&gt;11.  테이블 삭제하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; DROP TABLE student_tb&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;12-설정했던-db의-password-변경하기&quot;&gt;12. 설정했던 db의 password 변경하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER USER &lt;span class=&quot;s1&quot;&gt;'root@loaclhost'&lt;/span&gt; IDENTIFIED BY &lt;span class=&quot;s1&quot;&gt;'{변경할 password}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;13-db생성시-주의-사항&quot;&gt;13. db생성시 주의 사항&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;기본 인코딩을 utf8로 설정한다 (그렇지 않으면 한글이 테이블에 들어가지 않는다)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; CREATE DATABASE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;db이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;14-이미-생성된-데이터베이스-언어-인코딩-utf8로-변환한다&quot;&gt;14. 이미 생성된 데이터베이스 언어 인코딩 utf8로 변환한다&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ALTER DATABASE &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;db이름&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;15-db의-문자세트-확인하기&quot;&gt;15. db의 문자세트 확인하기&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SHOW VARIABLES LIKE &lt;span class=&quot;s1&quot;&gt;'character_set%'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>jung</name>
        
        
      </author>

      

      
        <category term="database" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
