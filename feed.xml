<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://heejung-gjt.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://heejung-gjt.github.io/" rel="alternate" type="text/html" /><updated>2021-10-07T23:14:43+09:00</updated><id>https://heejung-gjt.github.io/</id><title type="html">Studying  Develop</title><subtitle>개발 공부하는 블로그</subtitle><entry><title type="html">10/07 TIL</title><link href="https://heejung-gjt.github.io/til58" rel="alternate" type="text/html" title="10/07 TIL" /><published>2021-10-07T19:56:00+09:00</published><updated>2021-10-07T19:56:00+09:00</updated><id>https://heejung-gjt.github.io/til58</id><content type="html" xml:base="https://heejung-gjt.github.io/til58">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;211007-계획&quot;&gt;211007 계획&lt;/h2&gt;

&lt;h4 id=&quot;am-900-&quot;&gt;AM 9:00 ~&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;D-24&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;해야-할-일&quot;&gt;해야 할 일&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;너뉴스 wiki작성&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;konlpy 공부하기&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;월간 챌린지 코딩 테스트 보기&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;꽤 오랜만에 til을 작성하러 들어왔다. 습관적으로 기록을 남기는게 생각보다 쉽지 않다.. ㅠㅠ 최소한 내가
오늘 뭐를 배웠고 공부했는지는 빠뜨리지 않고 작성하도록 하자&lt;/p&gt;

&lt;p&gt;알고리즘 문제 맞히는거 너무 짜릿하다.. 뭔가 매력있어.. 난 왜 더 빨리 알고리즘 공부를 시작하지 않았을까 후회가 된다.&lt;/p&gt;</content><author><name>jung</name></author><category term="til" /><summary type="html"></summary></entry><entry><title type="html">(10월)프로그래머스 월간 코드 챌린지 시즌3 후기</title><link href="https://heejung-gjt.github.io/coding1" rel="alternate" type="text/html" title="(10월)프로그래머스 월간 코드 챌린지 시즌3 후기" /><published>2021-10-07T19:50:00+09:00</published><updated>2021-10-07T19:50:00+09:00</updated><id>https://heejung-gjt.github.io/coding1</id><content type="html" xml:base="https://heejung-gjt.github.io/coding1">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;알고리즘 공부를 시작하고 처음 본 코딩 테스트였다. 사실 아직 알고리즘에 자신이 없었기에 경험삼아 보는것이 컸다.&lt;/p&gt;

&lt;h3 id=&quot;1번-문제&quot;&gt;1번 문제&lt;/h3&gt;
&lt;p&gt;1번 문제는 10분컷으로 푼 것 같다. 파이썬의 나머지나 for문을 잘 활용하면 쉽게 풀리는 문제였던 것 같다.&lt;/p&gt;

&lt;h3 id=&quot;2번-문제&quot;&gt;2번 문제&lt;/h3&gt;
&lt;p&gt;문제 지문만 봤을때 나한테는 굉장히 두려운 문제였다. 문제에 대한 gif도 있었고 행렬을 이용해 풀어야 하는 문제였다.
가볍게 패스하고 3,4번 문제를 봤는데 곧바로 2번으로 돌아왔다 ㅋㅋㅋ   &lt;br /&gt;
2번의 결과만 말하자면 30/100이다. 대부분의 테스트케이스에서 시간초과가 났다. 이 문제를 봤을때 dfs로 푸는것이 좋을거 같다는
생각을 했다. 실제로 bfs로 원하는 값을 채워나갈 수 있었다. 하지만 시간초과… 시간에서 걸렸다. 거의 3시간동안 이문제를 잡고 있었지만
더이상 나아지는 것 없이 30점으로 끝나고 말았다.&lt;/p&gt;

&lt;p&gt;일단 다른 사람들 어떻게 풀었는지 너무 궁금하다.. 난 진짜 행렬에 값 채워나가는 방법이 dfs/bfs밖에 떠오르질 않았다.&lt;/p&gt;

&lt;h3 id=&quot;3번--4번-문제&quot;&gt;3번 &amp;amp; 4번 문제&lt;/h3&gt;
&lt;p&gt;사실 문제 지문 보지도 못했다… ^^  45분컷 한 사람이 있던데 진짜 대단한 사람… 👍&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;음.. 결과에 전혀 만족하지 못하지만 그래도 한달전의 나보다는 훨씬 성장한 것 같다. 2번문제를 스스로 푸는 방향을 정해
풀어보았다는 것에 의미를 두어야겠다(level1 난이도면 어떡하지…)&lt;br /&gt;
고작 30점 받았지만 어쨌든 내가 푼 방향이 아예 틀린것은 아니였으니까 ! 후후후&lt;/p&gt;

&lt;p&gt;조금 더 빨리 알고리즘 공부를 시작했으면 정말 좋았겠다는 생각이 많이 들었다. 지금 알고리즘에 많은 시간을 투자하지 못해서
너무 아쉽다. 문제 맞는거 너무 짜릿하다 !&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;결과는 1솔.. ^^&lt;/strong&gt;     &lt;br /&gt;
10/15일에 있을 dev matching 2솔이 목표다 !! 앞으로 8일 남았다. 많이 풀어보고 최대한 이해해 봐야겠다 !&lt;/p&gt;</content><author><name>jung</name></author><category term="coding" /><summary type="html"></summary></entry><entry><title type="html">0930 TIL</title><link href="https://heejung-gjt.github.io/til57" rel="alternate" type="text/html" title="0930 TIL" /><published>2021-09-29T20:55:00+09:00</published><updated>2021-09-29T20:55:00+09:00</updated><id>https://heejung-gjt.github.io/til57</id><content type="html" xml:base="https://heejung-gjt.github.io/til57">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;210930-계획&quot;&gt;210930 계획&lt;/h2&gt;

&lt;h4 id=&quot;am-900-&quot;&gt;AM 9:00 ~&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;D-30&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;해야-할-일&quot;&gt;해야 할 일&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘, sql 블로그 정리&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>jung</name></author><category term="til" /><summary type="html"></summary></entry><entry><title type="html">0929 TIL</title><link href="https://heejung-gjt.github.io/til56" rel="alternate" type="text/html" title="0929 TIL" /><published>2021-09-29T18:55:00+09:00</published><updated>2021-09-29T18:55:00+09:00</updated><id>https://heejung-gjt.github.io/til56</id><content type="html" xml:base="https://heejung-gjt.github.io/til56">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;210929-계획&quot;&gt;210929 계획&lt;/h2&gt;

&lt;h4 id=&quot;am-850-&quot;&gt;AM 8:50 ~&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;D-31&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;즐겁게 공부하자 !&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;해야-할-일&quot;&gt;해야 할 일&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;sql 강의 듣고 정리하기&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;sql 기본 문법 정리하기(group by, count, sum.. 배운내용)&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;플로그래머스 sql 문제 풀이&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;os 강의듣기(패캠 or 이화교수)&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;dfs/bfs 2문제풀이&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;프로그래머스 2문제 풀이&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;완전탐색 2문제 풀이&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;감자마켓 프로젝트 reademe, wiki v2.0 작성&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>jung</name></author><category term="til" /><summary type="html"></summary></entry><entry><title type="html">(MYSQL) Foreign Key 외래키(작성중..)</title><link href="https://heejung-gjt.github.io/db7" rel="alternate" type="text/html" title="(MYSQL) Foreign Key 외래키(작성중..)" /><published>2021-09-28T20:59:00+09:00</published><updated>2021-09-28T20:59:00+09:00</updated><id>https://heejung-gjt.github.io/db7</id><content type="html" xml:base="https://heejung-gjt.github.io/db7">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;외래키란&quot;&gt;외래키란&lt;/h2&gt;
&lt;p&gt;외래키는 두 테이블을 서로 연결할때 사용하는 키로 두 테이블 사이의 관계를 선언하여 데이터의 무결성을 보장해준다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;외래키-예제&quot;&gt;외래키 예제&lt;/h3&gt;
&lt;p&gt;먼저 예제를 보면서 이해를 해보자. blog라는 데이터베이스가 존재한다. 이 안에는 user와 article이라는 테이블이 존재하고
article 과 user가 n:1의 관계를 갖는다고 해보자. 즉 여러개의 article이 하나의 user를 참조하는 것이다&lt;/p&gt;

&lt;p&gt;쉽게 말해서 한명의 유저는 여러개의 글들을 작성할 수 있다&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;use_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreign&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;references&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- user의 user_id가 외래키가 된다&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>jung</name></author><category term="database" /><summary type="html"></summary></entry><entry><title type="html">(MYSQL) .sql파일로 SQL 실행시키기</title><link href="https://heejung-gjt.github.io/db6" rel="alternate" type="text/html" title="(MYSQL) .sql파일로 SQL 실행시키기" /><published>2021-09-28T20:57:00+09:00</published><updated>2021-09-28T20:57:00+09:00</updated><id>https://heejung-gjt.github.io/db6</id><content type="html" xml:base="https://heejung-gjt.github.io/db6">&lt;p&gt;mysql을 ec2 서버에서 사용한다는 가정하에 작성하였습니다. 😀&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;DB를 사용할때 sql파일을 따로 불러와 SQL을 실행시켜야 할 때가 있다. workbench를 이용해서 
sql파일을 불러올 수도 있고 ec2서버로 sql파일을 불러올 경우엔 scp 명령어를 사용하여 보다 빠르게 sql 파일을 가져올 수 있다&lt;/p&gt;

&lt;h3 id=&quot;1-workbench-이용하기&quot;&gt;1. workbench 이용하기&lt;/h3&gt;

&lt;p&gt;workbench를 사용하는 건 굉장히 간단하다. 하지만 .sql파일의 용량이 크면 클수록 업로드 되는 시간이 오래걸리는 단점이 있다 &lt;br /&gt;
&lt;strong&gt;File -&amp;gt; Open SQL Script -&amp;gt; .sql파일&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-scp명령어를-통해-서버에-sql파일-업로드-하기&quot;&gt;2. scp명령어를 통해 서버에 .sql파일 업로드 하기&lt;/h3&gt;

&lt;p&gt;localhost에서 MySQL 서버가 있는 ec2로 sql 파일을 전송하는 방법으로 서버에서 서버로 데이터를 보내기 때문에 속도가 1번의
방법보다 훨씬 빠르다&lt;/p&gt;

&lt;p&gt;명령어가 살짝 복잡하다..^^  &lt;br /&gt;
명령어를 살펴보면 &lt;strong&gt;scp를 이용해서 ~/Downloads/SQL/안에 있는 모든 sql파일을 ubuntu@퍼블릭주소의 서버의 ~/로 전송하겠다는 의미&lt;/strong&gt; 이다.  &lt;br /&gt;
~/가 아닌 보내고 싶은 서버의 디렉토리를 작성하면 된다.&lt;/p&gt;

&lt;p&gt;이후에 서버에서 ls로 sql파일을 확인 한 뒤 서버에서 mysql에 접속하여 데이터를 넣어주면 된다.  (sql파일이 어떤거냐에 따라 명령어가 추가 될 수 있다) &lt;br /&gt;
만약 데이터를 넣기 위한 데이터베이스가 따로 필요한 sql파일인 경우 데이터베이스를 먼저 create해준 뒤 파일을 넣어주면 된다&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;mysql -u root -p{password명} {생성한 db명} &amp;lt; ~/sql명.sql -- 생성한 데이터베이스에 데이터 넣어준다
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http request
scp - i ~/.ssh/pem명.pem ~/Downloads/SQL/*.sql ubuntu@퍼블릭주소:~/
&lt;/code&gt;&lt;/p&gt;</content><author><name>jung</name></author><category term="database" /><summary type="html"></summary></entry><entry><title type="html">0928 TIL</title><link href="https://heejung-gjt.github.io/til55" rel="alternate" type="text/html" title="0928 TIL" /><published>2021-09-28T19:55:00+09:00</published><updated>2021-09-28T19:55:00+09:00</updated><id>https://heejung-gjt.github.io/til55</id><content type="html" xml:base="https://heejung-gjt.github.io/til55">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;210928-계획&quot;&gt;210928 계획&lt;/h2&gt;

&lt;h4 id=&quot;am-900-&quot;&gt;AM 9:00 ~&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;D-32&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;러닝하러 나가고 싶었지만 비가 왔다.. 내일도 비가온다고 한다…^^ 마음 먹으니 날씨가 안도와준다ㅠㅠ&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;해야-할-일&quot;&gt;해야 할 일&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;sql 강의듣고 정리&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;프로그래머스 sql 문제풀이(4문제)&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;네트워크 웹 동작 방식&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;프로그래머스 level1(3문제)&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;완전탐색(2문제)&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;감자마켓 프로젝트 wiki 작성하기&lt;/del&gt;(작성중..)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>jung</name></author><category term="til" /><summary type="html"></summary></entry><entry><title type="html">(MYSQL) pymysql라이브러리 설치 후 DB 연동하기</title><link href="https://heejung-gjt.github.io/db5" rel="alternate" type="text/html" title="(MYSQL) pymysql라이브러리 설치 후 DB 연동하기" /><published>2021-09-28T10:00:00+09:00</published><updated>2021-09-28T10:00:00+09:00</updated><id>https://heejung-gjt.github.io/db5</id><content type="html" xml:base="https://heejung-gjt.github.io/db5">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pymysql이란&quot;&gt;pymysql이란&lt;/h2&gt;
&lt;p&gt;mysql을 python에서 사용할 수 있게 도와주는 라이브러리 중 하나이다. 파이썬에서 pymysql을 import하여 사용 할 수 있다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-pymysql-import&quot;&gt;1. pymysql import&lt;/h3&gt;
&lt;p&gt;pymysql.connect()를 사용하여 mysql에 연결 할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymysql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-pymysqlconnect&quot;&gt;2. pymysql.connect()&lt;/h3&gt;

&lt;p&gt;host에는 workbench를 사용하고 있다면 workbench에 연결한 주소를 써주면 된다. &lt;strong&gt;나는 ec2로 연결해서 사용했기 때문에 ec2의 퍼블릭 주소를 작성해주었다&lt;/strong&gt;    &lt;br /&gt;
ec2로 연결해 사용 할 경우 port 3306을 열어주었는지 확인하자 !&lt;/p&gt;

&lt;p&gt;charset를 넣어주는 이유는 데이터를 가져올때 한글이 깨지는 것을 방지하기 위해 넣어주었다&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pymysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{mysql 서버 주소}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# localhost라면 localhost/127.0.0.1을 입력하면 된다. &lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3306&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'root'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{password입력}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{db명}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'utf8'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# &amp;lt;pymysql.connections.Connection at 0x103c34d54&amp;gt; 이런식으로 나오면 연결 성공 한 것 !&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-cursor-메서드-호출해-cursor객체의-execute메서드-사용&quot;&gt;3. cursor() 메서드 호출해 Cursor객체의 execute()메서드 사용&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cursor Object를 가져온다 -&amp;gt; cursor = db.cursor()&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;SQL을 실행시킨다 -&amp;gt; cursor.execute(sql)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mysql서버에 결과를 반영시킨다 -&amp;gt; db.commit()&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;          - 2
    CREATE TABLE article(
        ID INT ...
        ...
    )
    &quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;news&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;①. cursor()메서드를 호출한다&lt;/p&gt;

&lt;p&gt;②. sql 쿼리문을 작성한다&lt;/p&gt;

&lt;p&gt;③. execute() 메서드를 이용해 작성한 쿼리문을 db 서버에 보낸다&lt;/p&gt;

&lt;p&gt;④. 삽입/갱신/삭제 등이 끝나면 Connection 객체의 commit() 메서드를 이용해 데이터를 commit한다&lt;/p&gt;

&lt;p&gt;⑤. Connection 객체의 close() 메서드를 이용해 db연결을 close한다&lt;/p&gt;</content><author><name>jung</name></author><category term="database" /><summary type="html"></summary></entry><entry><title type="html">0927 TIL</title><link href="https://heejung-gjt.github.io/til54" rel="alternate" type="text/html" title="0927 TIL" /><published>2021-09-27T18:55:00+09:00</published><updated>2021-09-27T18:55:00+09:00</updated><id>https://heejung-gjt.github.io/til54</id><content type="html" xml:base="https://heejung-gjt.github.io/til54">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;210927-계획&quot;&gt;210927 계획&lt;/h2&gt;

&lt;h4 id=&quot;am-815-&quot;&gt;AM 8:15 ~&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;D-33&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;오늘 7시에 운동하러 공원에 나갔다. 오랜만에 운동이라 기분이 상쾌하다 흐흐&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;해야-할-일&quot;&gt;해야 할 일&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;sql 강의듣고 정리&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;프로그래머스 sql 문제풀이(4문제)&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;완전탐색 tps알아보기(진행중..)&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;filter앱 리펙토링&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;</content><author><name>jung</name></author><category term="til" /><summary type="html"></summary></entry><entry><title type="html">(프로그래머스 with python) 최소직사각형</title><link href="https://heejung-gjt.github.io/algorithm19" rel="alternate" type="text/html" title="(프로그래머스 with python) 최소직사각형" /><published>2021-09-27T13:50:00+09:00</published><updated>2021-09-27T13:50:00+09:00</updated><id>https://heejung-gjt.github.io/algorithm19</id><content type="html" xml:base="https://heejung-gjt.github.io/algorithm19">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;level1-최소직사각형&quot;&gt;LEVEL1 최소직사각형&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/86491&quot;&gt;https://programmers.co.kr/learn/courses/30/lessons/86491&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;무엇보다 문제이해가 너무 중요하다.. 이 문제는 이해를 제대로 못해서 결국에는 다른 사람 풀이를 보고 푼 문제다…
ㅠㅠ 문제 속 규칙을 찾았으면 풀었을 문제였지만… 찾지 못하고 답을 봐버렸다… (보통 level1 은 20분정도 생각해보고 푸는데 시간 지났다고 답을 본게 후회가 됐다…흑)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;풀고나니 생각보다 쉬운 문제였다. 우선 2차원 배열일때 각 원소의 x[n][0]과 x[n][1] 값을 정렬하는 아이디어만 생각해내면
쉽게 푸는 문제다. &lt;br /&gt;
x[n][0]과 x[n][1]의 최대값을 구한 후 곱하면 끝 !&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sizes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sizes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;이차원-배열-원소-정렬하기&quot;&gt;이차원 배열 원소 정렬하기&lt;/h3&gt;

&lt;p&gt;sorted를 통해 각 인덱스에 있는 0과 1의 원소값을 정렬할 수 있다&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;n_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;new_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#  [[4, 3], [8, 5], [8, 1]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>jung</name></author><category term="algorithm" /><summary type="html"></summary></entry></feed>